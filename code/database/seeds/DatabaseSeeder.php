<?php
use Illuminate\Database\Seeder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class DatabaseSeeder extends Seeder
{
	/**
	 * Run the database seeds.
	 *
	 * @return void
	 */
	public function run()
	{
        Model::unguard();
        DB::statement('SET FOREIGN_KEY_CHECKS=0;');
	
        $this->call(ApiSettingsTableSeeder::class);
        $this->call(OrganizationTableSeeder::class);
        $this->call(SlaPlanTableSeeder::class);
        $this->call(DepartmentTableSeeder::class);
        $this->call(GroupsTableSeeder::class);
        $this->call(UsersTableSeeder::class);
        $this->call(BanlistTableSeeder::class);
        $this->call(BarNotificationsTableSeeder::class);
        $this->call(CannedResponseTableSeeder::class);
        $this->call(CommonSettingsTableSeeder::class);
        $this->call(ConditionsTableSeeder::class);
        $this->call(CountryCodeTableSeeder::class);
        $this->call(CustomFormFieldsTableSeeder::class);
        $this->call(CustomFormsTableSeeder::class);
        $this->call(DateFormatTableSeeder::class);
        $this->call(DateTimeFormatTableSeeder::class);
        $this->call(EmailsTableSeeder::class);
        $this->call(FailedJobsTableSeeder::class);
        $this->call(FaveoMailsTableSeeder::class);
        $this->call(FaveoQueuesTableSeeder::class);
        $this->call(FieldValuesTableSeeder::class);
        $this->call(GroupAssignDepartmentTableSeeder::class);
        $this->call(HelpTopicTableSeeder::class);
        $this->call(JobsTableSeeder::class);
        $this->call(KbArticleTableSeeder::class);
        $this->call(KbArticleRelationshipTableSeeder::class);
        $this->call(KbCategoryTableSeeder::class);
        $this->call(KbCommentTableSeeder::class);
        $this->call(KbPagesTableSeeder::class);
        $this->call(KbSettingsTableSeeder::class);
        $this->call(LanguagesTableSeeder::class);
        $this->call(LogNotificationTableSeeder::class);
        $this->call(LoginAttemptsTableSeeder::class);
        $this->call(MailServicesTableSeeder::class);
        $this->call(MailboxProtocolTableSeeder::class);
        $this->call(NotificationTypesTableSeeder::class);
        $this->call(NotificationsTableSeeder::class);
        $this->call(PasswordResetsTableSeeder::class);
        $this->call(PluginsTableSeeder::class);
        $this->call(QueueServicesTableSeeder::class);
        $this->call(RatingRefTableSeeder::class);
        $this->call(RatingsTableSeeder::class);
        $this->call(SettingsAlertNoticeTableSeeder::class);
        $this->call(SettingsAutoResponseTableSeeder::class);
        $this->call(SettingsCompanyTableSeeder::class);
        $this->call(SettingsEmailTableSeeder::class);
        $this->call(SettingsRatingsTableSeeder::class);
        $this->call(SettingsSecurityTableSeeder::class);
        $this->call(SettingsSystemTableSeeder::class);
        $this->call(SettingsTicketTableSeeder::class);
        $this->call(SocialMediaTableSeeder::class);
        $this->call(TeamAssignAgentTableSeeder::class);
        $this->call(TeamsTableSeeder::class);
        $this->call(TemplateTableSeeder::class);
        $this->call(TemplateSetsTableSeeder::class);
        $this->call(TemplateTypesTableSeeder::class);
        $this->call(TemplatesTableSeeder::class);
        $this->call(TicketAttachmentTableSeeder::class);
        $this->call(TicketCollaboratorTableSeeder::class);
        $this->call(TicketFormDataTableSeeder::class);
        $this->call(TicketPriorityTableSeeder::class);
        $this->call(TicketSourceTableSeeder::class);
        $this->call(TicketStatusTableSeeder::class);
        $this->call(TicketThreadTableSeeder::class);
        $this->call(TicketTokenTableSeeder::class);
        $this->call(TicketsTableSeeder::class);
        $this->call(TimeFormatTableSeeder::class);
        $this->call(TimezoneTableSeeder::class);
        $this->call(UserAdditionalInfosTableSeeder::class);
        $this->call(UserAssignOrganizationTableSeeder::class);
        $this->call(UserNotificationTableSeeder::class);
        $this->call(VersionCheckTableSeeder::class);
        $this->call(WidgetsTableSeeder::class);
        $this->call(WorkflowActionTableSeeder::class);
        $this->call(WorkflowCloseTableSeeder::class);
        $this->call(WorkflowNameTableSeeder::class);
        $this->call(WorkflowRulesTableSeeder::class);
        $this->call(GaBadgeEventsTableSeeder::class);
        $this->call(GaBadgesTableSeeder::class);
        $this->call(GaCategoriesTableSeeder::class);
        $this->call(GaEventsTableSeeder::class);
        $this->call(GaLevelAssociateTableSeeder::class);
        $this->call(GaTypesTableSeeder::class);
        $this->call(GaUserAchievementsTableSeeder::class);
        $this->call(GaUserBadgesTableSeeder::class);
        $this->call(GaUserLevelsTableSeeder::class);
        $this->call(SdAssetFormTableSeeder::class);
        $this->call(SdAssetRelationsTableSeeder::class);
        $this->call(SdAssetTypeFormTableSeeder::class);
        $this->call(SdAssetTypesTableSeeder::class);
        $this->call(SdAssetsTableSeeder::class);
        $this->call(SdAttachmentTypesTableSeeder::class);
        $this->call(SdAttachmentsTableSeeder::class);
        $this->call(SdCabTableSeeder::class);
        $this->call(SdCabVotesTableSeeder::class);
        $this->call(SdChangePrioritiesTableSeeder::class);
        $this->call(SdChangeReleaseTableSeeder::class);
        $this->call(SdChangeStatusTableSeeder::class);
        $this->call(SdChangeTypesTableSeeder::class);
        $this->call(SdChangesTableSeeder::class);
        $this->call(SdContractAssetRelationsTableSeeder::class);
        $this->call(SdContractTypesTableSeeder::class);
        $this->call(SdContractsTableSeeder::class);
        $this->call(SdFieldValuesTableSeeder::class);
        $this->call(SdFormFieldsTableSeeder::class);
        $this->call(SdFormsTableSeeder::class);
        $this->call(SdGerneralTableSeeder::class);
        $this->call(SdImpactTypesTableSeeder::class);
        $this->call(SdLicenseTypesTableSeeder::class);
        $this->call(SdLocationCategoriesTableSeeder::class);
        $this->call(SdLocationsTableSeeder::class);
        $this->call(SdProblemTableSeeder::class);
        $this->call(SdProblemChangeTableSeeder::class);
        $this->call(SdProductProcModeTableSeeder::class);
        $this->call(SdProductStatusTableSeeder::class);
        $this->call(SdProductVendorRelationTableSeeder::class);
        $this->call(SdProductsTableSeeder::class);
        $this->call(SdReleasePrioritiesTableSeeder::class);
        $this->call(SdReleaseStatusTableSeeder::class);
        $this->call(SdReleaseTypesTableSeeder::class);
        $this->call(SdReleasesTableSeeder::class);
        $this->call(SdTicketRelationTableSeeder::class);
        $this->call(SdVendorsTableSeeder::class);

        DB::statement('SET FOREIGN_KEY_CHECKS=1;');
        Model::reguard();
	}
}
